#version 330

in vec4 vVertex;
in vec3 vNormal;

uniform mat4 mvpMatrix;
uniform mat4 mvMatrix;
uniform mat3 normalMatrix;
uniform mat4 mInverseCamera;

smooth out vec3 vVaryingTexCoord;

void main(void)
{
//在惯性系的坐标
	vec3 vEyeNormal = normalMatrix * vNormal;
	
	vec4 vPosition4 = mvMatrix * vVertex;
	vec3 vEyeVertex = normalize(vPosition4.xyz/vPosition4.w);
	
	vec4 cCoords = vec4(reflect(vEyeVertex,vEyeNormal),1.0f);//不清楚reflect的原理，导致代码思想断片，靠猜？开玩笑，还是开源比较好
	cCoords = mInverseCamera * cCoords;//全面反射场景？？？
	
	vVaryingTexCoord.xyz = normalize(cCoords.xyz); //获得是什么坐标？
	
	gl_Position = mvpMatrix * vVertex;
}